---
import Layout from "../layouts/Layout.astro"
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Asteroids Game</title>
  <script src="https://cdn.jsdelivr.net/npm/onnxjs/dist/onnx.min.js"></script>
  <script src="https://cdn.jsdelivr.net/pyodide/v0.17.0/full/pyodide.js"></script>
</head>
<body>
  <h1>Asteroids Game</h1>
  <canvas id="gameCanvas" width="640" height="480"></canvas>
  <script type="text/javascript">
    async function main() {
        const session = new onnx.InferenceSession();
        await session.loadModel("model.onnx");

        const pyodide = await loadPyodide();
        await pyodide.loadPackage('gymnasium');

        await pyodide.runPythonAsync(`
            import gymnasium as gym

            def play_game():
                env = gym.make('Asteroids-v0')
                observation = env.reset()
                for _ in range(1000):
                    env.render()
                    window.parent.postMessage(observation.tolist(), '*')
                    action = await window.parent.receiveAction()
                    observation, reward, done, info = env.step(action)
                    if done:
                        observation = env.reset()
                env.close()

            pyodide.runPythonAsync('play_game()')
        `);

        window.addEventListener("message", async (event) => {
            if (event.data) {
                const inputTensor = new onnx.Tensor(event.data, 'float32');
                const outputMap = await session.run([inputTensor]);
                const outputTensor = outputMap.values().next().value;
                window.parent.postMessage(outputTensor.data, '*');
            }
        });
    }

    main();
  </script>
</body>
</html>
